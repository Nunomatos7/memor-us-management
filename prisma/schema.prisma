generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
  output   = "./node_modules/@prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model logs {
  id              Int           @id @default(autoincrement())
  super_admins_id Int?
  action          String
  performed_at    DateTime?     @default(now()) @db.Timestamp(6)
  super_admins    super_admins? @relation(fields: [super_admins_id], references: [id], map: "fk_logs_super_admins")
}

model super_admins {
  id            Int       @id @default(autoincrement())
  name          String    @db.VarChar(100)
  email         String    @unique @db.VarChar(100)
  password_hash String
  created_at    DateTime? @default(now()) @db.Timestamp(6)
  updated_at    DateTime? @default(now()) @db.Timestamp(6)
  deleted_at    DateTime? @db.Timestamp(6)
  logs          logs[]
  tenants       tenants[]
}

model tenants {
  id                  Int          @id @default(autoincrement())
  name                String       @db.VarChar(255)
  subdomain           String       @unique @db.VarChar(255)
  schema_name         String       @unique @db.VarChar(255)
  status              String?      @default("active") @db.VarChar(20)
  created_at          DateTime?    @default(now()) @db.Timestamp(6)
  updated_at          DateTime?    @default(now()) @db.Timestamp(6)
  deleted_at          DateTime?    @db.Timestamp(6)
  created_by_admin_id Int
  super_admins        super_admins @relation(fields: [created_by_admin_id], references: [id], onDelete: Restrict, map: "fk_tenants_super_admins")
}
